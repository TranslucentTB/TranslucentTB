<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Microsoft.Windows.CppWinRT.2.0.221121.5\build\native\Microsoft.Windows.CppWinRT.props" Condition="Exists('..\packages\Microsoft.Windows.CppWinRT.2.0.221121.5\build\native\Microsoft.Windows.CppWinRT.props')" />
  <Import Project="..\packages\Microsoft.UI.Xaml.2.8.1\build\native\Microsoft.UI.Xaml.props" Condition="Exists('..\packages\Microsoft.UI.Xaml.2.8.1\build\native\Microsoft.UI.Xaml.props')" />
  <PropertyGroup Label="Globals">
    <ProjectGuid>{59F844AA-8D3C-431C-B8CC-57682915F551}</ProjectGuid>
    <ConfigurationType>Application</ConfigurationType>
    <GenerateManifest>true</GenerateManifest>
    <RootNamespace>TranslucentTB</RootNamespace>
  </PropertyGroup>
  <Import Project="..\Common\CppProject.props" />
  <PropertyGroup>
    <BeforeLinkTargets>
      $(BeforeLinkTargets);
      _UnpackagedWin32GenerateAdditionalWinmdManifests;
      _GenerateCustomLibFiles;
    </BeforeLinkTargets>
  </PropertyGroup>
  <Target Name="_UnpackagedWin32MapWinmdsToManifestFiles" DependsOnTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <!-- For each non-system .winmd file in References, generate a .manifest in IntDir for it. -->
      <_UnpackagedWin32WinmdManifest Include="@(ReferencePath->'$(IntDir)\%(FileName).manifest')" Condition="'%(ReferencePath.IsSystemReference)' != 'true' and '%(ReferencePath.WinMDFile)' == 'true' and '%(ReferencePath.ReferenceSourceTarget)' == 'ResolveAssemblyReference' and '%(ReferencePath.Implementation)' != ''">
        <WinMDPath>%(ReferencePath.FullPath)</WinMDPath>
        <Implementation>%(ReferencePath.Implementation)</Implementation>
      </_UnpackagedWin32WinmdManifest>
      <!--
          For each referenced project that _produces_ a winmd, generate a temporary item that maps to
          the winmd, and use that temporary item to generate a .manifest in IntDir for it.
          We don't set Implementation here because it's inherited from the _ResolvedNativeProjectReferencePaths.
      -->
      <_UnpackagedWin32WinmdProjectReference Condition="'%(_ResolvedNativeProjectReferencePaths.ProjectType)' != 'StaticLibrary' And '%(_ResolvedNativeProjectReferencePaths.DeploymentContent)' != 'false'" Include="@(_ResolvedNativeProjectReferencePaths-&gt;WithMetadataValue('FileType','winmd')-&gt;'%(RootDir)%(Directory)%(TargetPath)')" />
      <_UnpackagedWin32WinmdManifest Include="@(_UnpackagedWin32WinmdProjectReference->'$(IntDir)\%(FileName).manifest')">
        <WinMDPath>%(Identity)</WinMDPath>
      </_UnpackagedWin32WinmdManifest>
    </ItemGroup>
  </Target>
  <Target Name="_UnpackagedWin32GenerateAdditionalWinmdManifests" Inputs="@(_UnpackagedWin32WinmdManifest.WinMDPath)" Outputs="@(_UnpackagedWin32WinmdManifest)" DependsOnTargets="_UnpackagedWin32MapWinmdsToManifestFiles">
    <Message Text="Generating manifest for %(_UnpackagedWin32WinmdManifest.WinMDPath)" Importance="High" />
    <!-- This target is batched and a new Exec is spawned for each entry in _UnpackagedWin32WinmdManifest. -->
    <Exec Command="mt.exe -nologo -winmd:%(_UnpackagedWin32WinmdManifest.WinMDPath) -dll:%(_UnpackagedWin32WinmdManifest.Implementation) -out:%(_UnpackagedWin32WinmdManifest.Identity)" />
    <ItemGroup>
      <!--
          Emit the generated manifest into the Link inputs.
          Pass a metadata name that isn't used to wipe all metadata because otherwise VS tries copying the manifest to the output as %(FileName).winmd
      -->
      <Manifest Include="@(_UnpackagedWin32WinmdManifest)" KeepMetadata="DoesntExist" />
    </ItemGroup>
  </Target>
  <Target Name="_GenerateCustomLibFiles" Inputs="@(CustomDefFile.FullPath)" Outputs="$(IntDir)@(CustomDefFile.Filename).lib">
    <Message Text="Generating lib file for %(CustomDefFile.Filename).%(CustomDefFile.Extension)" Importance="High" />
    <!-- This target is batched and a new Exec is spawned for each entry in CustomDefFile. -->
    <Exec Command="lib.exe /DEF:&quot;%(CustomDefFile.FullPath)&quot; /OUT:&quot;$(IntDir)%(CustomDefFile.Filename).lib&quot; /MACHINE:$(PlatformTarget) /NOLOGO" />
    <ItemGroup>
      <!--
          Emit the generated lib files into the Link inputs.
          Pass a metadata name that isn't used to wipe all metadata.
      -->
      <Library Include="$(IntDir)%(CustomDefFile.Filename).lib" KeepMetadata="DoesntExist" />
    </ItemGroup>
  </Target>
  <ItemDefinitionGroup Label="Globals">
    <ClCompile>
      <PreprocessorDefinitions>_TRANSLUCENTTB_EXE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalDependencies>advapi32.lib;comctl32.lib;coremessaging.lib;delayimp.lib;dwmapi.lib;gdi32.lib;mincore.lib;ole32.lib;pathcch.lib;runtimeobject.lib;shcore.lib;shell32.lib;shlwapi.lib;user32.lib;onecore.lib</AdditionalDependencies>
      <DelayLoadDLLs>api-ms-win-appmodel-runtime-l1-1-5.dll</DelayLoadDLLs>
      <SubSystem>Windows</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="application.cpp" />
    <ClCompile Include="localization.cpp" />
    <ClCompile Include="managers\configmanager.cpp" />
    <ClCompile Include="folderwatcher.cpp" />
    <ClCompile Include="mainappwindow.cpp" />
    <ClCompile Include="managers\startupmanager.cpp" />
    <ClCompile Include="taskbar\taskbarattributeworker.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="tray\basecontextmenu.cpp" />
    <ClCompile Include="uwp\basexamlpagehost.cpp" />
    <ClCompile Include="uwp\dynamicdependency.cpp" />
    <ClCompile Include="uwp\xamldragregion.cpp" />
    <ClCompile Include="uwp\xamlthreadpool.cpp" />
    <ClCompile Include="uwp\xamlthread.cpp" />
    <ClCompile Include="windows\messagewindow.cpp" />
    <ClCompile Include="tray\trayicon.cpp" />
    <ClCompile Include="uwp\uwp.cpp" />
    <ClCompile Include="windows\window.cpp" />
    <ClCompile Include="windows\windowclass.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="application.hpp" />
    <ClInclude Include="dynamicloader.hpp" />
    <ClInclude Include="localization.hpp" />
    <ClInclude Include="managers\configmanager.hpp" />
    <ClInclude Include="folderwatcher.hpp" />
    <ClInclude Include="mainappwindow.hpp" />
    <ClInclude Include="managers\startupmanager.hpp" />
    <ClInclude Include="taskbar\launchervisibilitysink.hpp" />
    <ClInclude Include="tray\basecontextmenu.hpp" />
    <ClInclude Include="tray\traycontextmenu.hpp" />
    <ClInclude Include="taskbar\taskbarattributeworker.hpp" />
    <ClInclude Include="uwp\basexamlpagehost.hpp" />
    <ClInclude Include="uwp\dynamicdependency.hpp" />
    <ClInclude Include="uwp\xamldragregion.hpp" />
    <ClInclude Include="uwp\xamlthreadpool.hpp" />
    <ClInclude Include="uwp\xamlpagehost.hpp" />
    <ClInclude Include="uwp\xamlthread.hpp" />
    <ClInclude Include="windows\messagewindow.hpp" />
    <ClInclude Include="resources\ids.h" />
    <ClInclude Include="tray\contextmenu.hpp" />
    <ClInclude Include="tray\trayicon.hpp" />
    <ClInclude Include="uwp\uwp.hpp" />
    <ClInclude Include="windows\window.hpp" />
    <ClInclude Include="windows\windowclass.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="resources\TranslucentTB.rc2" />
    <ResourceCompile Include="resources\language\TranslucentTB.de-DE.rc2" />
    <ResourceCompile Include="resources\language\TranslucentTB.en-US.rc2" />
    <ResourceCompile Include="resources\language\TranslucentTB.es-US.rc2" />
    <ResourceCompile Include="resources\language\TranslucentTB.it-IT.rc2" />
    <ResourceCompile Include="resources\language\TranslucentTB.ja-JP.rc2" />
    <ResourceCompile Include="resources\language\TranslucentTB.zh-CN.rc2" />
    <ResourceCompile Include="resources\language\TranslucentTB.zh-TW.rc2" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ExplorerHooks\ExplorerHooks.vcxproj">
      <Project>{d0004e78-f00b-4943-b77e-9a278f8ba399}</Project>
      <DeploymentContent>true</DeploymentContent>
    </ProjectReference>
    <ProjectReference Include="..\ExplorerTAP\ExplorerTAP.vcxproj">
      <Project>{e759084f-6445-400d-8f43-a64a6e276659}</Project>
      <DeploymentContent>true</DeploymentContent>
    </ProjectReference>
    <ProjectReference Include="..\ProgramLog\ProgramLog.vcxproj">
      <Project>{62cd9de0-af10-40f0-b72c-7a7b5bbba3c7}</Project>
      <DeploymentContent>true</DeploymentContent>
    </ProjectReference>
    <ProjectReference Include="..\WindowsUdk\WindowsUdk.vcxproj">
      <Project>{55ed608b-b142-43a8-b42f-bbf292a61cbd}</Project>
      <DeploymentContent>false</DeploymentContent>
      <!-- Prevent the .winmd from showing up in the final output. -->
      <Private>false</Private>
    </ProjectReference>
    <ProjectReference Include="..\Xaml\Xaml.vcxproj">
      <Project>{9875d8e1-9594-445e-a0e4-07c6027f85e0}</Project>
      <DeploymentContent>true</DeploymentContent>
      <!--
          Prevent the .pri and .winmd from showing up in the final output.
          IDK why this doesn't also prevent copying the .dll, but whatever.
      -->
      <Private>false</Private>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Manifest Include="resources\TranslucentTB.manifest" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="resources\TranslucentTB.black.ico" />
    <Image Include="resources\TranslucentTB.ico" />
    <Image Include="resources\TranslucentTB.white.ico" />
  </ItemGroup>
  <ItemGroup>
    <Natvis Include="windows\Window.natvis" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include="taskbar\ShellExperience.idl">
      <SubType>Designer</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <CustomDefFile Include="uwp\api-ms-win-appmodel-runtime-l1-1-5.def" />
  </ItemGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Microsoft.UI.Xaml.2.8.1\build\native\Microsoft.UI.Xaml.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.UI.Xaml.2.8.1\build\native\Microsoft.UI.Xaml.props'))" />
    <Error Condition="!Exists('..\packages\Microsoft.UI.Xaml.2.8.1\build\native\Microsoft.UI.Xaml.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.UI.Xaml.2.8.1\build\native\Microsoft.UI.Xaml.targets'))" />
    <Error Condition="!Exists('..\packages\Microsoft.Web.WebView2.1.0.1418.22\build\native\Microsoft.Web.WebView2.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Web.WebView2.1.0.1418.22\build\native\Microsoft.Web.WebView2.targets'))" />
    <Error Condition="!Exists('..\packages\Microsoft.Windows.CppWinRT.2.0.221121.5\build\native\Microsoft.Windows.CppWinRT.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Windows.CppWinRT.2.0.221121.5\build\native\Microsoft.Windows.CppWinRT.props'))" />
    <Error Condition="!Exists('..\packages\Microsoft.Windows.CppWinRT.2.0.221121.5\build\native\Microsoft.Windows.CppWinRT.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Windows.CppWinRT.2.0.221121.5\build\native\Microsoft.Windows.CppWinRT.targets'))" />
  </Target>
  <Import Project="..\packages\Microsoft.UI.Xaml.2.8.1\build\native\Microsoft.UI.Xaml.targets" Condition="Exists('..\packages\Microsoft.UI.Xaml.2.8.1\build\native\Microsoft.UI.Xaml.targets')" />
  <Import Project="..\packages\Microsoft.Web.WebView2.1.0.1418.22\build\native\Microsoft.Web.WebView2.targets" Condition="Exists('..\packages\Microsoft.Web.WebView2.1.0.1418.22\build\native\Microsoft.Web.WebView2.targets')" />
  <Import Project="..\packages\Microsoft.Windows.CppWinRT.2.0.221121.5\build\native\Microsoft.Windows.CppWinRT.targets" Condition="Exists('..\packages\Microsoft.Windows.CppWinRT.2.0.221121.5\build\native\Microsoft.Windows.CppWinRT.targets')" />
</Project>